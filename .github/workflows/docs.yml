
name: Deploy docs to GitHub Pages

on: 
  push:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Check changes
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Load docs cache
        id: docs-cache
        uses: actions/cache@v3
        with:
          path: docs_cache.txt
          key: ${{ hashFiles( 'docs/**/*' ) }}
      
      - name: Create cache file
        run: echo "${{ hashFiles( 'docs/**/*' ) }}" > docs_cache.txt

      - name: Store true cache hit
        run: echo "HIT=true" >> "$GITHUB_OUTPUT"
        if: ${{ steps.docs-cache.outputs.cache-hit == 'true'}}
      
      - name: Store false if no cache hit
        run: echo "HIT=false" >> "$GITHUB_OUTPUT"
        if: ${{ steps.docs-cache.outputs.cache-hit != 'true'}}
      
  # Build job
  build:
    needs: check
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: "3.11"
      POETRY_INSTALL_ARGS: --only docs
    if: ${{ needs.check.outputs.HIT != 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install poetry
        run: pip install poetry==1.7.1

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      # setup python
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "poetry"

      - name: Install dependencies
        run: poetry install ${{ env.POETRY_INSTALL_ARGS }}

      - name: Build docs
        run: poetry run make -C docs html
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/build/html
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3