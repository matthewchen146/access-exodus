
name: Deploy docs to GitHub Pages

on: 
  push:
    branches: [main]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    env:
      PYTHON_VERSION: "3.11"
      POETRY_INSTALL_ARGS: --only docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      # setup python
      - uses: actions/checkout@v4
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"
      
      # verify python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Hash poetry install arguments
        id: poetry-install-args
        run: |
          echo ${{ env.POETRY_INSTALL_ARGS }} > poetry_install_hash.txt
          echo "::step-output name=hash::${{ hashFiles( 'poetry_install_hash.txt' ) }}"

      # cache poetry venv
      - name: Load cached venv
        id: cached-poetry-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ steps.poetry-install-args.outputs.hash }}

      - name: Install poetry
        run: python -m pip install poetry==1.7.1

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      # create venv and install dependencies
      - name: Install dependencies
        run: poetry install ${{ env.POETRY_INSTALL_ARGS }}
        if: steps.cached-poetry-venv.outputs.cache-hit != 'true'
      
      - name: Build docs
        run: make -C docs html
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: docs/build/html
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3