SOURCE_DSN_PARAMS {
    Driver: Microsoft Access Driver (*.mdb, *.accdb)
}

SOURCES {
    
    Automobile {
        DSN_PARAMS {
            DBQ: ./tests/databases/database_a.accdb
        }
        TARGET_TABLE: automobiles
        COLUMNS {
            AutoID: old_id
            AutoVIN: vin
            AutoMake: make
            AutoModel: model
            AutoYear: year
            AutoLicPlate: plate
            State: state
            AutoMileage: mileage
            Notes: notes
            # foreign key that points to a customer.
            # since the new database a new primary key for customers,
            # map the old customer id to the new primary key,
            # and put into the foreign key slot
            CustID: customer_id WITH customers.id FROM ROW(customers.old_id, @value)
            # from the id column in customers, get the id from the row with the matching @value for old_id
            # the mapping created will be a dict with FROM key customers.old_id and WITH value customers.id
            # this mapping will be created first, then performed later
            # this also implies that customers should be created/filled first
        }
    }
    Customer {
        DSN_PARAMS {
            DBQ: ./tests/databases/database_a.accdb
        }
        TARGET_TABLE: customers
        COLUMNS {
            CustID: old_id
            Name: name
            Address1: address_1
            Address2: address_2
            City: city
            State: state
            ZipCode: zip
            # Source: source_id
            WorkPhone: phone
            LastIn: last_visit
            DollarsSpent: dollars_spent
            Visits: visits
        }
    }
    Employees {
        DSN_PARAMS {
            DBQ: ./tests/databases/database_a.accdb
        }
        TARGET_TABLE: employees
        COLUMNS {
            IDNumber: old_id
            Name: name
            Address1: address_1
            Address2: address_2
            City: city
            State: state
            ZipCode: zip
            HomePhone: phone
            NickName: nick_name
            StartDate: start_date
            JobClass: job_class
            PayType: pay_type
            PayRate: pay_rate
            Password: password
        }
    }
    Tasks {
        DSN_PARAMS {
            DBQ: ./tests/databases/database_b.accdb
        }
        TARGET_TABLE: task_types
        COLUMNS {
            TaskID: id
            TaskDescription: description
            TaskApplicability: applicability
            ServiceNo: service_no
        }
    }
}

TARGET_DSN_PARAMS {
    Driver: PostgreSQL Unicode
    Server: localhost
    Port: ${POSTGRES_PORT}
    Database: postgres
    Uid: postgres
    Pwd: ${POSTGRES_PASSWORD}
} 

TARGETS {
    customers {
        COLUMNS {
            id: serial primary key
            old_id: text
            name: text
            address_1: text
            address_2: text
            city: text
            state: text
            zip: text
            # source_id: int references sources(id)
            phone: text
            last_visit: date
            dollars_spent: numeric
            visits: int
        }
    }
    automobiles {
        COLUMNS {
            id: serial primary key
            old_id: text
            vin: text
            make: text
            model: text
            year: text
            plate: text
            state: text
            mileage: int
            notes: text
            customer_id: int references customers(id)
        }
    }
    employees {
        COLUMNS {
            id: serial primary key
            old_id: text
            name: text
            address_1: text
            address_2: text
            city: text
            state: text
            zip: text
            phone: text
            nick_name: text
            start_date: date
            job_class: text
            pay_type: text
            pay_rate: numeric
            password: text
        }
    }
    task_types {
        COLUMNS {
            id: int primary key
            description: text
            applicability: text
            service_no: int
        }
    }
}